useDynLib(potomax, .registration = TRUE)

import(Renext)
importFrom("ismev", "rlarg.fit")
## data manip
importFrom("methods", "is")
importFrom("dplyr", "filter")
importFrom("tidyr", "gather")
import(ggplot2)
importFrom("reshape2", "melt")

## optimisation
import("nloptr")

## graphics
import(graphics)
import(ggplot2)
importFrom("scales", "trans_new")

## stats
import("stats", except = c("filter"))

export(RL, RP, as.potData, profLik,
       dGPD2, pGPD2, qGPD2, rGPD2,
       potData, threshData,
       poisGP,
       poisGP2PP, PP2poisGP)

## ============================================================================
## Class "potData" : Similar to Rendata
## ============================================================================

S3method(summary, "potData")
S3method(print, "potData")
S3method(print, "summary.potData")
S3method(autoplot, "potData")
S3method(autolayer, "potData")
S3method(RP, "potData")
S3method(as.potData, "Rendata")
S3method(as.potData, "potData")

## ============================================================================
## Class "poisGP" : Poisson-GP by Maximum-Likelihood
## ============================================================================

S3method(profLik, "default")
S3method(coef, "poisGP")
S3method(vcov, "poisGP")
S3method(logLik, "poisGP")
S3method(AIC, "poisGP")
S3method(BIC, "poisGP")
S3method(confint, "poisGP")
S3method(RL, "poisGP")
S3method(summary, "poisGP")
S3method(print, "poisGP")
S3method(print, "summary.poisGP")
S3method(autoplot, "poisGP")
S3method(RL, "poisGP")
S3method(autoplot, "RL.poisGP")
S3method(autoplot, "RL.poisGPList")

## ============================================================================
## Objects used to check the results
## ============================================================================

S3method(autoplot, "confintCheck.poisGP")
S3method(autoplot, "RLCheck.poisGP")


