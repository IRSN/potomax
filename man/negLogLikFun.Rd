% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MLEPoisGP.R
\name{negLogLikFun}
\alias{negLogLikFun}
\title{Negative Log-Likelihood Function for a \code{poisGP} Object}
\usage{
negLogLikFun(theta, object, deriv = TRUE, hessian = FALSE)
}
\arguments{
\item{theta}{Parameter vector Poisson rate and GP parameters.}

\item{object}{The \code{poisGP} object corresponding to the
estimation.}

\item{deriv}{Logical. Should the gradient be computed and be
returned as the \code{"gradient"} attribute of the result?}
}
\value{
The value of the negative log-likelihood. When
\code{deriv} is \code{TRUE} the result has an attribute named
\code{"gradient"} the value of which is a row matrix with three
columns corresponding to the parameters \code{lambda},
\code{scale} and \code{shape}.
}
\description{
Negative log-likelihood function for a \code{poisGP} object.
}
\section{Caution}{
 The negative log-likelihood is computed \emph{up
to a constant} which is unimportant in the optimisation and is
taken to be zero in the \emph{concentrated} version as computed by
\code{\link{negLogLikFunC}}, which actually is the worhorse of the
estimation. This maintains a compatibility with the log-likelihood
as computed by \code{Renext::Renouv} but not with that arising
from other packages. So please be careful when comparing
log-likelihoods across packages. This is also true for AIC and BIC
criteria.
}

